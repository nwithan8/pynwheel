# generated by datamodel-codegen:
#   filename:  model.json
#   timestamp: 2021-04-24T01:35:21+00:00

from __future__ import annotations

from enum import Enum
from typing import Optional

from pydantic import BaseModel, Field


class Category(Enum):
    salary = 'salary'
    hourly = 'hourly'
    overtime = 'overtime'
    double_overtime = 'double_overtime'
    premium = 'premium'
    bonus = 'bonus'
    commission = 'commission'
    tips = 'tips'
    vacation = 'vacation'
    holiday = 'holiday'
    pto = 'pto'
    sick = 'sick'
    employer_contribution = 'employer_contribution'
    other = 'other'
    fare = 'fare'


class Earning(BaseModel):
    name: str = Field(..., description='The name of the earning.', title='Name')
    category: Category = Field(
        ..., description='The category of earning.', title='Category'
    )
    amount: int = Field(
        ..., description='The amount of earning, in cents.', title='Amount'
    )
    rate: Optional[int] = Field(
        None, description='The amount earned per hour.', title='Rate'
    )
    hours: Optional[float] = Field(None, description='The hours worked.', title='Hours')
