# generated by datamodel-codegen:
#   filename:  model.json
#   timestamp: 2021-04-24T01:28:45+00:00

from __future__ import annotations

from datetime import date, datetime
from enum import Enum
from typing import List, Optional
from uuid import UUID

from pydantic import BaseModel, Field


class Type(Enum):
    shift = 'shift'
    rideshare = 'rideshare'
    delivery = 'delivery'
    other = 'other'


class Timestamp(BaseModel):
    from_: datetime = Field(
        ...,
        alias='from',
        description='Datetime the work began. ISO 8601 format.',
        title='From',
    )
    to: datetime = Field(
        ..., description='Datetime the work ended. ISO 8601 format.', title='To'
    )


class Currency(Enum):
    AED = 'AED'
    AFN = 'AFN'
    ALL = 'ALL'
    AMD = 'AMD'
    ANG = 'ANG'
    AOA = 'AOA'
    ARS = 'ARS'
    AUD = 'AUD'
    AWG = 'AWG'
    AZN = 'AZN'
    BAM = 'BAM'
    BBD = 'BBD'
    BDT = 'BDT'
    BGN = 'BGN'
    BHD = 'BHD'
    BIF = 'BIF'
    BMD = 'BMD'
    BND = 'BND'
    BOB = 'BOB'
    BOV = 'BOV'
    BRL = 'BRL'
    BSD = 'BSD'
    BTN = 'BTN'
    BWP = 'BWP'
    BYR = 'BYR'
    BZD = 'BZD'
    CAD = 'CAD'
    CDF = 'CDF'
    CHE = 'CHE'
    CHF = 'CHF'
    CHW = 'CHW'
    CLF = 'CLF'
    CLP = 'CLP'
    CNY = 'CNY'
    COP = 'COP'
    COU = 'COU'
    CRC = 'CRC'
    CUC = 'CUC'
    CUP = 'CUP'
    CVE = 'CVE'
    CZK = 'CZK'
    DJF = 'DJF'
    DKK = 'DKK'
    DOP = 'DOP'
    DZD = 'DZD'
    EGP = 'EGP'
    ERN = 'ERN'
    ETB = 'ETB'
    EUR = 'EUR'
    FJD = 'FJD'
    FKP = 'FKP'
    GBP = 'GBP'
    GEL = 'GEL'
    GHS = 'GHS'
    GIP = 'GIP'
    GMD = 'GMD'
    GNF = 'GNF'
    GTQ = 'GTQ'
    GYD = 'GYD'
    HKD = 'HKD'
    HNL = 'HNL'
    HRK = 'HRK'
    HTG = 'HTG'
    HUF = 'HUF'
    IDR = 'IDR'
    ILS = 'ILS'
    INR = 'INR'
    IQD = 'IQD'
    IRR = 'IRR'
    ISK = 'ISK'
    JMD = 'JMD'
    JOD = 'JOD'
    JPY = 'JPY'
    KES = 'KES'
    KGS = 'KGS'
    KHR = 'KHR'
    KMF = 'KMF'
    KPW = 'KPW'
    KRW = 'KRW'
    KWD = 'KWD'
    KYD = 'KYD'
    KZT = 'KZT'
    LAK = 'LAK'
    LBP = 'LBP'
    LKR = 'LKR'
    LRD = 'LRD'
    LSL = 'LSL'
    LTL = 'LTL'
    LVL = 'LVL'
    LYD = 'LYD'
    MAD = 'MAD'
    MDL = 'MDL'
    MGA = 'MGA'
    MKD = 'MKD'
    MMK = 'MMK'
    MNT = 'MNT'
    MOP = 'MOP'
    MRO = 'MRO'
    MUR = 'MUR'
    MVR = 'MVR'
    MWK = 'MWK'
    MXN = 'MXN'
    MXV = 'MXV'
    MYR = 'MYR'
    MZN = 'MZN'
    NAD = 'NAD'
    NGN = 'NGN'
    NIO = 'NIO'
    NOK = 'NOK'
    NPR = 'NPR'
    NZD = 'NZD'
    OMR = 'OMR'
    PAB = 'PAB'
    PEN = 'PEN'
    PGK = 'PGK'
    PHP = 'PHP'
    PKR = 'PKR'
    PLN = 'PLN'
    PYG = 'PYG'
    QAR = 'QAR'
    RON = 'RON'
    RSD = 'RSD'
    RUB = 'RUB'
    RWF = 'RWF'
    SAR = 'SAR'
    SBD = 'SBD'
    SCR = 'SCR'
    SDG = 'SDG'
    SEK = 'SEK'
    SGD = 'SGD'
    SHP = 'SHP'
    SLL = 'SLL'
    SOS = 'SOS'
    SRD = 'SRD'
    SSP = 'SSP'
    STD = 'STD'
    SYP = 'SYP'
    SZL = 'SZL'
    THB = 'THB'
    TJS = 'TJS'
    TMT = 'TMT'
    TND = 'TND'
    TOP = 'TOP'
    TRY = 'TRY'
    TTD = 'TTD'
    TWD = 'TWD'
    TZS = 'TZS'
    UAH = 'UAH'
    UGX = 'UGX'
    USD = 'USD'
    USN = 'USN'
    USS = 'USS'
    UYI = 'UYI'
    UYU = 'UYU'
    UZS = 'UZS'
    VEF = 'VEF'
    VND = 'VND'
    VUV = 'VUV'
    WST = 'WST'
    XAF = 'XAF'
    XAG = 'XAG'
    XAU = 'XAU'
    XBA = 'XBA'
    XBB = 'XBB'
    XBC = 'XBC'
    XBD = 'XBD'
    XCD = 'XCD'
    XDR = 'XDR'
    XOF = 'XOF'
    XPD = 'XPD'
    XPF = 'XPF'
    XPT = 'XPT'
    XTS = 'XTS'
    XXX = 'XXX'
    YER = 'YER'
    ZAR = 'ZAR'
    ZMW = 'ZMW'


class Category(Enum):
    salary = 'salary'
    hourly = 'hourly'
    overtime = 'overtime'
    double_overtime = 'double_overtime'
    premium = 'premium'
    bonus = 'bonus'
    commission = 'commission'
    tips = 'tips'
    vacation = 'vacation'
    holiday = 'holiday'
    pto = 'pto'
    sick = 'sick'
    employer_contribution = 'employer_contribution'
    other = 'other'
    fare = 'fare'


class Earning(BaseModel):
    name: str = Field(..., description='The name of the earning.', title='Name')
    category: Category = Field(
        ..., description='The category of earning.', title='Category'
    )
    amount: Optional[int] = Field(
        None, description='The amount of earning, in cents.', title='Amount'
    )
    rate: Optional[int] = Field(
        None, description='The amount earned per hour.', title='Rate'
    )
    hours: Optional[float] = Field(None, description='The hours worked.', title='Hours')


class Shift(BaseModel):
    id: UUID = Field(
        ..., description='Unique identifier of the Shift object.', title='Id'
    )
    created_at: datetime = Field(
        ..., description='ISO 8601 timestamp of created time.', title='Created At'
    )
    account_id: UUID = Field(
        ..., description='UUID of the payroll account.', title='Account Id'
    )
    start_date: date = Field(
        ...,
        description='The date the Shift started. ISO 8601 format.',
        title='Start Date',
    )
    end_date: date = Field(
        ..., description='The date the Shift ended. ISO 8601 format.', title='End Date'
    )
    type: Type = Field(..., description='The type of the work performed.', title='Type')
    timezone: Optional[str] = Field(
        None,
        description='The timezone where the work was completed. Valid names are in the IANA Timezone Database.',
        title='Timezone',
    )
    timestamps: List[Timestamp] = Field(
        ...,
        description='The timezone where the work was completed. Valid names are in the IANA Timezone Database.',
        title='Timestamps',
    )
    currency: Currency = Field(
        ...,
        description='Three-letter ISO 4217 currency code, uppercase. For example, the code for US dollars is USD.',
        title='Currency',
    )
    earnings: List[Earning] = Field(
        ...,
        description='An array of objects that represent a specific earning.',
        title='Earnings',
    )
